DROP DATABASE IF EXISTS ORG;
CREATE DATABASE IF NOT EXISTS ORG;

USE ORG;

SHOW DATABASES;
SHOW TABLES;

CREATE TABLE Worker 
( 
  Worker_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,  
  First_Name CHAR(25),
  Last_Name CHAR(25),
  Salary INT(15),
  Joining_Date DATETIME,
  Department CHAR(25)
);  

Insert INTO Worker 
    (Worker_id, First_Name, Last_Name, Salary, Joining_Date, Department) 
    VALUES
    (001, 'Monika' , 'Arora', 100000, '14-02-20 09:00:00'  , 'HR'),
    (002, 'Niharika' , 'Verma', 80000, '14-06-11 09:00:00' , 'Admin'),
    (003, 'Vishal' , 'Singhal', 300000, '14-02-20 09:00:00' , 'HR'),
    (004, 'Amitabh' , 'Singh', 500000, '14-02-20 09:00:00' , 'Admin'),
    (005, 'Vivek' , 'Bhati', 500000, '14-06-11 09:00:00' , 'Admin'), 
    (006, 'Vipul' , 'Diwan' , 200000 , '14-06-11 09:00:00' , 'Account'),
    (007, 'Satish' , 'Kumar' , 75000, '14-01-20 09:00:00' , 'Account'),
    (008, 'Geetika' , 'Chauhan' , 90000, '14-04-11 09:00:00' , 'Admin'); 
        
SELECT * FROM Worker;

-- References from the Main Table 'Worker'
-- Stores the Amount of Bonus being given to some Worker Corresponding to their 'Worker_id'
CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
    ON DELETE CASCADE
);

INSERT INTO Bonus
       (WORKER_REF_ID , BONUS_AMOUNT , BONUS_DATE)
       VALUES
       (001, 5000, '16-02-20'),
		   (002, 3000, '16-06-11'),
		   (003, 4000, '16-02-20'),
		   (001, 4500, '16-02-20'),
		   (002, 3500, '16-06-11');
		   
SELECT * FROM Bonus;

-- References the Main Table 'Worker'
-- Stores the Title assigned to a worker Corresponding to their 'Worker_id'
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title
         (WORKER_REF_ID , WORKER_TITLE , AFFECTED_FROM)
         VALUES
          (001, 'Manager', '2016-02-20 00:00:00'),
          (002, 'Executive', '2016-06-11 00:00:00'),
          (008, 'Executive', '2016-06-11 00:00:00'),
          (005, 'Manager', '2016-06-11 00:00:00'),
          (004, 'Asst. Manager', '2016-06-11 00:00:00'),
          (007, 'Executive', '2016-06-11 00:00:00'),
          (006, 'Lead', '2016-06-11 00:00:00'),
          (003, 'Lead', '2016-06-11 00:00:00');
    
SELECT * FROM Title;

SELECT FIRST_NAME AS WORKER_NAME FROM WORKER;

SELECT UCASE(FIRST_NAME) FROM WORKER;

SELECT DISTINCT(DEPARTMENT) FROM WORKER;

SELECT DEPARTMENT FROM WORKER GROUP BY DEPARTMENT;

SELECT SUBSTR(FIRST_NAME, 1, 3) FROM WORKER;

SELECT INSTR(FIRST_NAME, 'B') FROM WORKER WHERE FIRST_NAME = 'Amitabh';

SELECT RTRIM(FIRST_NAME) FROM WORKER;

SELECT LTRIM(FIRST_NAME) FROM WORKER;

SELECT DISTINCT(DEPARTMENT), LENGTH(DEPARTMENT) AS LENGTH FROM WORKER;

SELECT REPLACE(FIRST_NAME, 'a', 'A') FROM WORKER;

SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS COMPLETE_NAME FROM WORKER;

SELECT * FROM WORKER ORDER BY FIRST_NAME ASC;

SELECT * FROM WORKER ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

SELECT * FROM WORKER WHERE FIRST_NAME='Vipul' OR FIRST_NAME='Satish';

SELECT * FROM WORKER WHERE FIRST_NAME IN ('Vipul', 'Satish');

SELECT * FROM WORKER WHERE FIRST_NAME NOT IN ('Vipul', 'Satish');

SELECT * FROM WORKER WHERE DEPARTMENT LIKE 'Admin%';

SELECT * FROM WORKER WHERE FIRST_NAME LIKE '%a%';

SELECT * FROM WORKER WHERE FIRST_NAME LIKE '%a';

SELECT * FROM WORKER WHERE FIRST_NAME LIKE '%h' AND LENGTH(FIRST_NAME) = 6;

SELECT * FROM WORKER WHERE SALARY BETWEEN 100000 AND 500000;

SELECT * FROM WORKER WHERE YEAR(JOINING_DATE) = 2014 AND MONTH(JOINING_DATE) = 02;

SELECT COUNT(*) AS EMPLOYEES_IN_ADMIN_DEPARTMENT FROM WORKER WHERE DEPARTMENT = 'Admin';

SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME FROM WORKER WHERE SALARY BETWEEN 50000 AND 100000;

SELECT DEPARTMENT, COUNT(DEPARTMENT) AS TOTAL_EMPLOYEES FROM WORKER GROUP BY DEPARTMENT ORDER BY TOTAL_EMPLOYEES DESC;

SELECT DEPARTMENT, COUNT(DEPARTMENT) AS TOTAL_EMPLOYEES FROM WORKER GROUP BY DEPARTMENT ORDER BY TOTAL_EMPLOYEES ASC;

SELECT * FROM WORKER AS W INNER JOIN TITLE AS T ON W.WORKER_ID = T.WORKER_REF_ID WHERE T.WORKER_TITLE = 'Manager';

SELECT WORKER_TITLE, COUNT(WORKER_TITLE) AS TOTAL_WORKERS FROM TITLE GROUP BY WORKER_TITLE HAVING
TOTAL_WORKERS>1;

SELECT * FROM WORKER WHERE WORKER_ID%2!=0;

SELECT * FROM WORKER WHERE MOD(WORKER_ID, 2)!=0;

SELECT * FROM WORKER WHERE MOD(WORKER_ID, 2)=0;

CREATE TABLE WORKER_CLONE LIKE WORKER;

SELECT * FROM WORKER_CLONE;

INSERT INTO WORKER_CLONE SELECT * FROM WORKER;

SELECT * FROM WORKER_CLONE;

SELECT W.* FROM WORKER AS W INNER JOIN WORKER_CLONE AS WC ON WC.WORKER_ID = W.WORKER_ID;

SELECT W.* FROM WORKER AS W LEFT JOIN WORKER_CLONE AS WC ON WC.WORKER_ID = W.WORKER_ID
WHERE WC.WORKER_ID = NULL;

SELECT CURRENT_DATE() AS 'CURRENT_DATE';

SELECT CURRENT_TIME() AS 'CURRENT_TIME';

SELECT NOW() AS CURRENT_DATE_TIME;

SELECT * FROM WORKER ORDER BY SALARY DESC LIMIT 5;

SELECT * FROM WORKER AS W1 WHERE 5
= (SELECT COUNT(*) FROM WORKER AS W2 WHERE W1.SALARY<=W2.SALARY);

SELECT * FROM WORKER ORDER BY SALARY DESC LIMIT 4, 1;

show tables;
show databases;

SELECT W1.* FROM WORKER W1, WORKER W2 WHERE W1.SALARY=W2.SALARY AND W1.WORKER_ID!=W2.WORKER_ID;

SELECT MAX(SALARY) FROM WORKER WHERE SALARY NOT IN (SELECT MAX(SALARY) FROM WORKER);

SELECT * FROM WORKER UNION ALL SELECT * FROM WORKER ORDER BY WORKER_ID;

SELECT * FROM WORKER WHERE WORKER_ID NOT IN (SELECT WORKER_REF_ID FROM BONUS);

SELECT * FROM WORKER WHERE WORKER_ID<=(SELECT COUNT(WORKER_ID) FROM WORKER)/2;

SELECT DEPARTMENT, COUNT(DEPARTMENT) FROM WORKER GROUP BY DEPARTMENT HAVING COUNT(DEPARTMENT)<4;

SELECT DEPARTMENT, COUNT(DEPARTMENT) FROM WORKER GROUP BY DEPARTMENT;

SELECT * FROM WORKER WHERE WORKER_ID = (SELECT MAX(WORKER_ID) FROM WORKER);

SELECT * FROM WORKER WHERE WORKER_ID = (SELECT MIN(WORKER_ID) FROM WORKER);

SELECT * FROM (SELECT * FROM WORKER ORDER BY WORKER_ID DESC LIMIT 5) AS TEMP ORDER BY WORKER_ID ASC;

SELECT W.DEPARTMENT, W.FIRST_NAME, W.SALARY FROM WORKER AS W INNER JOIN (SELECT MAX(SALARY) AS MAX_SAL, DEPARTMENT FROM WORKER GROUP BY DEPARTMENT) AS TEMP ON W.DEPARTMENT=TEMP.DEPARTMENT WHERE TEMP.MAX_SAL=W.SALARY;                                      

SELECT DISTINCT SALARY FROM WORKER W1 WHERE 3 >= (SELECT COUNT(DISTINCT SALARY) FROM WORKER W2 WHERE W1.SALARY <= W2.SALARY) ORDER BY SALARY DESC;

SELECT DISTINCT SALARY FROM WORKER W1 WHERE 3 > (SELECT COUNT(DISTINCT SALARY) FROM WORKER W2 WHERE W1.SALARY > W2.SALARY) ORDER BY SALARY;

SELECT DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY FROM WORKER GROUP BY DEPARTMENT;

SELECT FIRST_NAME, SALARY FROM WORKER WHERE SALARY = (SELECT MAX(SALARY) FROM WORKER);